[package]
name = "reth_bsc"
version = "0.1.0"
edition = "2021"

[lib]
name = "reth_bsc"
path = "src/lib.rs"

[[bin]]
name = "reth-bsc"
path = "src/main.rs"

[dependencies]
reth = "1.5.1"
reth-cli = "1.5.1"
reth-cli-commands = "1.5.1"
reth-basic-payload-builder = "1.5.1"
reth-db = "1.5.1"
reth-engine-local = "1.5.1"
reth-chainspec = "1.5.1"
reth-cli-util = "1.5.1"
reth-discv4 = { version = "1.5.1", features = ["test-utils"] }
reth-engine-primitives = "1.5.1"
reth-ethereum-forks = { version = "1.5.1", features = ["serde"] }
reth-ethereum-payload-builder = "1.5.1"
reth-ethereum-primitives = "1.5.1"
reth-eth-wire = "1.5.1"
reth-eth-wire-types = "1.5.1"
reth-evm = "1.5.1"
reth-evm-ethereum = "1.5.1"
reth-execution-types = { path = "../reth/crates/evm/execution-types" }
reth-node-core = "1.5.1"
reth-node-api = "1.5.1"
reth-node-builder = "1.5.1"
reth-payload-builder = "1.5.1"
reth-transaction-pool = { path = "../reth/crates/transaction-pool" }
reth-revm = "1.5.1"
reth-network = { version = "1.5.1", features = ["test-utils"] }
reth-network-p2p = "1.5.1"
reth-network-api = "1.5.1"
reth-node-ethereum = { version = "1.5.1", features = ["test-utils"] }
reth-network-peers = "1.5.1"
reth-payload-primitives = "1.5.1"
reth-primitives = "1.5.1"
reth-primitives-traits = "1.5.1"
reth-provider = { version = "1.5.1", features = ["test-utils"] }
reth-rpc-eth-api = "1.5.1"
reth-rpc-engine-api = "1.5.1"
reth-rpc-api = "1.5.1"
reth-tracing = "1.5.1"
reth-trie-common = "1.5.1"
reth-trie-db = "1.5.1"
reth-rpc = "1.5.1"
revm = "27.0.2"

# Alloy stack (aligned with upstream reth @ 8e0ff9)
alloy-evm         = "0.14"
alloy-genesis     = "1.0.17"
alloy-consensus   = "1.0.17"
alloy-eips        = "1.0.17"
alloy-network     = "1.0.17"
alloy-rpc-types   = { version = "1.0.17", features = ["engine"] }
alloy-rpc-types-eth    = "1.0.17"
alloy-rpc-types-engine = "1.0.17"
alloy-signer      = "1.0.17"
alloy-chains      = "0.2.0"
alloy-rlp         = { version = "0.3.10", default-features = false, features = ["core-net"] }
alloy-dyn-abi     = "1.2.0"
alloy-json-abi    = { version = "1.2.0", default-features = false }
alloy-primitives  = { version = "1.2.0", default-features = false, features = ["map-foldhash"] }
alloy-sol-macro   = "1.2.0"
alloy-sol-types   = { version = "1.2.0", default-features = false }

jsonrpsee = "0.25.1"
jsonrpsee-core = { version = "0.25.1" }
jsonrpsee-types = "0.25.1"

# misc dependencies
auto_impl = "1"
async-trait = "0.1"
bytes = "1.5"
clap = { version = "4.4", features = ["derive"] }
cfg-if = { version = "1.0", default-features = false }
derive_more = "0.99"
eyre = "0.6"
futures = "0.3"
lazy_static = "1.4.0"
once_cell = { version = "1.19", default-features = false, features = ["alloc"] }
parity-bytes = { version = "0.1.2", default-features = false }
secp256k1 = { version = "0.28", features = ["global-context", "std", "recovery"] }
serde = { version = "1.0", features = ["derive"], default-features = false }
serde_json = "1.0"
serde_cbor = "0.11"
parking_lot = "0.12"
schnellru = "0.2"
thiserror = "1.0"
tokio = { version = "1.36", features = ["full"] }
tokio-stream = "0.1"
tracing = "0.1"


# precompiles deps
bls_on_arkworks = "0.3.0"

cometbft = { git = "https://github.com/bnb-chain/greenfield-cometbft-rs.git", rev = "1282547" }
cometbft-light-client-verifier = { git = "https://github.com/bnb-chain/greenfield-cometbft-rs.git", rev = "1282547" }
cometbft-proto = { git = "https://github.com/bnb-chain/greenfield-cometbft-rs.git", rev = "1282547" }
cometbft-light-client = { git = "https://github.com/bnb-chain/greenfield-cometbft-rs.git", rev = "1282547" }

prost = { version = "0.12.6" }

tendermint = { git = "https://github.com/bnb-chain/tendermint-rs-parlia", rev = "8c21ccbd58a174e07eed2c9343e63ccd00f0fbd5", features = ["secp256k1"] }

[target.'cfg(unix)'.dependencies]
tikv-jemalloc-ctl = "0.6"
tikv-jemallocator = { version = "0.6", optional = true }
libc = "0.2"

[features]
default = ["jemalloc"]
jemalloc = ["dep:tikv-jemallocator"]
dev = [
    "reth-cli-commands/arbitrary",
    "reth/dev",
    "revm/dev",
]

serde = [
    "alloy-chains/serde",
    "alloy-consensus/serde",
    "alloy-eips/serde",
    "alloy-primitives/serde",
    "alloy-rpc-types-engine/serde",
    "alloy-rpc-types-eth/serde",
    "bytes/serde",
    "parking_lot/serde",
    "reth-eth-wire/serde",
    "reth-eth-wire-types/serde",
    "reth-ethereum-forks/serde",
    "reth-ethereum-primitives/serde",
    "reth-network/serde",
    "reth-network-api/serde",
    "reth-primitives-traits/serde",
    "reth-revm/serde",
    "reth-trie-common/serde",
    "reth-trie-db/serde",
    "revm/serde",
    "secp256k1/serde",
]

client = [
    "jsonrpsee/client",
    "jsonrpsee/async-client",
    "reth-rpc-eth-api/client",
]

[dev-dependencies]
reth-e2e-test-utils = { path = "../reth/crates/e2e-test-utils" }

[patch."https://github.com/paradigmxyz/reth"]
# (CLI crates live outside crates/ now; not needed for tests.)
reth-node-types = { path = "../reth/crates/node/types" }
reth-node-api = { path = "../reth/crates/node/api" }
reth-node-builder = { path = "../reth/crates/node/builder" }
reth-node-ethereum = { path = "../reth/crates/ethereum/node" }
reth-engine-primitives = { path = "../reth/crates/engine/primitives" }
reth-payload-primitives = { path = "../reth/crates/payload/primitives" }
reth-payload-builder-primitives = { path = "../reth/crates/payload/builder-primitives" }
reth-payload-builder = { path = "../reth/crates/payload/builder" }
reth-ethereum-primitives = { path = "../reth/crates/ethereum/primitives" }
reth-ethereum-engine-primitives = { path = "../reth/crates/ethereum/engine-primitives" }
reth-engine-local = { path = "../reth/crates/engine/local" }
reth-e2e-test-utils = { path = "../reth/crates/e2e-test-utils" }
 reth-primitives-traits = { path = "../reth/crates/primitives-traits" }
 reth-primitives = { path = "../reth/crates/primitives" }
 reth-codecs = { path = "../reth/crates/storage/codecs" }
 reth-db-api = { path = "../reth/crates/storage/db-api" }
 reth-db = { path = "../reth/crates/storage/db" }
 reth-execution-types = { path = "../reth/crates/evm/execution-types" }
 reth-eth-wire-types = { path = "../reth/crates/net/eth-wire-types" }
 reth-eth-wire = { path = "../reth/crates/net/eth-wire" }
 reth-trie-common = { path = "../reth/crates/trie/common" }
 reth-trie-db = { path = "../reth/crates/trie/db" }
 reth-trie = { path = "../reth/crates/trie/trie" }
 reth-storage-api = { path = "../reth/crates/storage/storage-api" }
 reth-storage-errors = { path = "../reth/crates/storage/errors" }
 reth-db-models = { path = "../reth/crates/storage/db-models" }
 reth-prune = { path = "../reth/crates/prune/prune" }
 reth-prune-types = { path = "../reth/crates/prune/types" }
 reth-stages-types = { path = "../reth/crates/stages/types" }
 reth-stages = { path = "../reth/crates/stages/stages" }
 reth-stages-api = { path = "../reth/crates/stages/api" }
 reth-revm = { path = "../reth/crates/revm" }
  reth-static-file-types = { path = "../reth/crates/static-file/types" }
  reth-static-file = { path = "../reth/crates/static-file/static-file" }
  reth-execution-errors = { path = "../reth/crates/evm/execution-errors" }
  reth-downloaders = { path = "../reth/crates/net/downloaders" }
  reth-discv5 = { path = "../reth/crates/net/discv5" }
  reth-network-p2p = { path = "../reth/crates/net/p2p" }
reth-cli = { path = "../reth/crates/cli/cli" }
reth-cli-commands = { path = "../reth/crates/cli/commands" }
reth-cli-util = { path = "../reth/crates/cli/util" }
reth-cli-runner = { path = "../reth/crates/cli/runner" }
reth-basic-payload-builder = { path = "../reth/crates/payload/basic" }
reth-discv4 = { path = "../reth/crates/net/discv4" }
reth-network = { path = "../reth/crates/net/network" }
reth-network-api = { path = "../reth/crates/net/network-api" }
reth-network-peers = { path = "../reth/crates/net/peers" }
reth-provider = { path = "../reth/crates/storage/provider" }
reth-node-core = { path = "../reth/crates/node/core" }
reth-chainspec = { path = "../reth/crates/chainspec" }
reth-ethereum-forks = { path = "../reth/crates/ethereum/hardforks" }
reth-ethereum-payload-builder = { path = "../reth/crates/ethereum/payload" }
reth-evm = { path = "../reth/crates/evm/evm" }
reth-evm-ethereum = { path = "../reth/crates/ethereum/evm" }
reth-rpc-eth-api = { path = "../reth/crates/rpc/rpc-eth-api" }
reth-rpc-engine-api = { path = "../reth/crates/rpc/rpc-engine-api" }
reth-rpc = { path = "../reth/crates/rpc/rpc" }
reth-tracing = { path = "../reth/crates/tracing" }
reth = { path = "../reth/bin/reth" }
reth-transaction-pool = { path = "../reth/crates/transaction-pool" }

[patch.crates-io]
reth = { path = "../reth/bin/reth" }
reth-cli = { path = "../reth/crates/cli/cli" }
reth-cli-commands = { path = "../reth/crates/cli/commands" }
reth-cli-util = { path = "../reth/crates/cli/util" }
reth-cli-runner = { path = "../reth/crates/cli/runner" }
reth-basic-payload-builder = { path = "../reth/crates/payload/basic" }
reth-discv4 = { path = "../reth/crates/net/discv4" }
reth-discv5 = { path = "../reth/crates/net/discv5" }
reth-node-types = { path = "../reth/crates/node/types" }
reth-node-api = { path = "../reth/crates/node/api" }
reth-node-builder = { path = "../reth/crates/node/builder" }
reth-node-ethereum = { path = "../reth/crates/ethereum/node" }
reth-node-core = { path = "../reth/crates/node/core" }
reth-engine-primitives = { path = "../reth/crates/engine/primitives" }
reth-engine-local = { path = "../reth/crates/engine/local" }
reth-payload-primitives = { path = "../reth/crates/payload/primitives" }
reth-payload-builder-primitives = { path = "../reth/crates/payload/builder-primitives" }
reth-payload-builder = { path = "../reth/crates/payload/builder" }
reth-ethereum-primitives = { path = "../reth/crates/ethereum/primitives" }
reth-ethereum-engine-primitives = { path = "../reth/crates/ethereum/engine-primitives" }
reth-ethereum-forks = { path = "../reth/crates/ethereum/hardforks" }
reth-ethereum-payload-builder = { path = "../reth/crates/ethereum/payload" }
reth-eth-wire = { path = "../reth/crates/net/eth-wire" }
reth-eth-wire-types = { path = "../reth/crates/net/eth-wire-types" }
reth-evm = { path = "../reth/crates/evm/evm" }
reth-evm-ethereum = { path = "../reth/crates/ethereum/evm" }
reth-network = { path = "../reth/crates/net/network" }
reth-network-api = { path = "../reth/crates/net/network-api" }
reth-network-p2p = { path = "../reth/crates/net/p2p" }
reth-network-peers = { path = "../reth/crates/net/peers" }
reth-provider = { path = "../reth/crates/storage/provider" }
reth-db = { path = "../reth/crates/storage/db" }
reth-db-api = { path = "../reth/crates/storage/db-api" }
reth-codecs = { path = "../reth/crates/storage/codecs" }
reth-primitives = { path = "../reth/crates/primitives" }
reth-primitives-traits = { path = "../reth/crates/primitives-traits" }
reth-tracing = { path = "../reth/crates/tracing" }
reth-trie-common = { path = "../reth/crates/trie/common" }
reth-trie-db = { path = "../reth/crates/trie/db" }
reth-revm = { path = "../reth/crates/revm" }
reth-rpc-eth-api = { path = "../reth/crates/rpc/rpc-eth-api" }
reth-rpc-engine-api = { path = "../reth/crates/rpc/rpc-engine-api" }
reth-rpc = { path = "../reth/crates/rpc/rpc" }
reth-rpc-api = { path = "../reth/crates/rpc/rpc-api" }
reth-chainspec = { path = "../reth/crates/chainspec" }